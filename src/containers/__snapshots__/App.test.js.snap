// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    dispatch={[Function]}
    events={Array []}
    isFetching={false}
    username="sindresorhus"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
>
          <h1>
                    Github: Look Me Up
          </h1>
</header>,
        <div
          className="App-body"
>
          <SearchBar
                    handleSubmit={[Function]}
                    username="sindresorhus"
                    usernameInput={
                              Object {
                                        "current": null,
                                      }
                    }
          />
          <EventList
                    events={Array []}
                    isFetching={false}
          />
</div>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            Github: Look Me Up
</h1>,
          "className": "App-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Github: Look Me Up",
          },
          "ref": null,
          "rendered": "Github: Look Me Up",
          "type": "h1",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SearchBar
              handleSubmit={[Function]}
              username="sindresorhus"
              usernameInput={
                            Object {
                                          "current": null,
                                        }
              }
/>,
            <EventList
              events={Array []}
              isFetching={false}
/>,
          ],
          "className": "App-body",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleSubmit": [Function],
              "username": "sindresorhus",
              "usernameInput": Object {
                "current": null,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "events": Array [],
              "isFetching": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
>
            <h1>
                        Github: Look Me Up
            </h1>
</header>,
          <div
            className="App-body"
>
            <SearchBar
                        handleSubmit={[Function]}
                        username="sindresorhus"
                        usernameInput={
                                    Object {
                                                "current": null,
                                              }
                        }
            />
            <EventList
                        events={Array []}
                        isFetching={false}
            />
</div>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              Github: Look Me Up
</h1>,
            "className": "App-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Github: Look Me Up",
            },
            "ref": null,
            "rendered": "Github: Look Me Up",
            "type": "h1",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SearchBar
                handleSubmit={[Function]}
                username="sindresorhus"
                usernameInput={
                                Object {
                                                "current": null,
                                              }
                }
/>,
              <EventList
                events={Array []}
                isFetching={false}
/>,
            ],
            "className": "App-body",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleSubmit": [Function],
                "username": "sindresorhus",
                "usernameInput": Object {
                  "current": null,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "events": Array [],
                "isFetching": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
